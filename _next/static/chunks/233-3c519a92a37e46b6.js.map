{"version":3,"file":"static/chunks/233-3c519a92a37e46b6.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs","webpack://_N_E/./node_modules/@radix-ui/react-slot/dist/index.mjs","webpack://_N_E/./node_modules/class-variance-authority/dist/index.mjs","webpack://_N_E/./node_modules/clsx/dist/clsx.mjs","webpack://_N_E/./node_modules/tailwind-merge/dist/bundle-mjs.mjs","webpack://_N_E/<anon>"],"sourcesContent":["// packages/react/compose-refs/src/compose-refs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/slot/src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","const CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\n * Exported for testing only\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    prefix\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\nconst getPrefixedClassGroupEntries = (classGroupEntries, prefix) => {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\n    const prefixedClassGroup = classGroup.map(classDefinition => {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n};\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst createParseClassName = config => {\n  const {\n    separator,\n    experimentalParseClassName\n  } = config;\n  const isSeparatorSingleCharacter = separator.length === 1;\n  const firstSeparatorCharacter = separator[0];\n  const separatorLength = separator.length;\n  // parseClassName inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  const parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (experimentalParseClassName) {\n    return className => experimentalParseClassName({\n      className,\n      parseClassName\n    });\n  }\n  return parseClassName;\n};\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nconst sortModifiers = modifiers => {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  const sortedModifiers = [];\n  let unsortedModifiers = [];\n  modifiers.forEach(modifier => {\n    const isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push(...unsortedModifiers.sort());\n  return sortedModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isLength = value => isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, 'length', isLengthOnly);\nconst isNumber = value => Boolean(value) && !Number.isNaN(Number(value));\nconst isArbitraryNumber = value => getIsArbitraryValue(value, 'number', isNumber);\nconst isInteger = value => Boolean(value) && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\nconst isArbitrarySize = value => getIsArbitraryValue(value, sizeLabels, isNever);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, 'position', isNever);\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\nconst isArbitraryImage = value => getIsArbitraryValue(value, imageLabels, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, '', isShadow);\nconst isAny = () => true;\nconst getIsArbitraryValue = (value, label, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isInteger,\n  isLength,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  const colors = fromTheme('colors');\n  const spacing = fromTheme('spacing');\n  const blur = fromTheme('blur');\n  const brightness = fromTheme('brightness');\n  const borderColor = fromTheme('borderColor');\n  const borderRadius = fromTheme('borderRadius');\n  const borderSpacing = fromTheme('borderSpacing');\n  const borderWidth = fromTheme('borderWidth');\n  const contrast = fromTheme('contrast');\n  const grayscale = fromTheme('grayscale');\n  const hueRotate = fromTheme('hueRotate');\n  const invert = fromTheme('invert');\n  const gap = fromTheme('gap');\n  const gradientColorStops = fromTheme('gradientColorStops');\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  const inset = fromTheme('inset');\n  const margin = fromTheme('margin');\n  const opacity = fromTheme('opacity');\n  const padding = fromTheme('padding');\n  const saturate = fromTheme('saturate');\n  const scale = fromTheme('scale');\n  const sepia = fromTheme('sepia');\n  const skew = fromTheme('skew');\n  const space = fromTheme('space');\n  const translate = fromTheme('translate');\n  const getOverscroll = () => ['auto', 'contain', 'none'];\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\n  return {\n    cacheSize: 500,\n    separator: ':',\n    theme: {\n      colors: [isAny],\n      spacing: [isLength, isArbitraryLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumberAndArbitrary(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmptyAndArbitrary(),\n      contrast: getNumberAndArbitrary(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumberAndArbitrary(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumberAndArbitrary(),\n      scale: getNumberAndArbitrary(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: [...getPositions(), isArbitraryValue]\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: [inset]\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: [inset]\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: ['auto', isInteger, isArbitraryValue]\n      }],\n      // Flexbox and Grid\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: ['normal', ...getAlign()]\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...getAlign(), 'baseline']\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': [...getAlign(), 'baseline']\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: [padding]\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: [padding]\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: [margin]\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: [margin]\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/size\n       */\n      size: [{\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\n       * Placeholder Opacity\n       * @see https://tailwindcss.com/docs/placeholder-opacity\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\n       * Text Opacity\n       * @see https://tailwindcss.com/docs/text-opacity\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...getLineStyles(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength, isArbitraryValue]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Opacity\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/background-opacity\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: [...getPositions(), isArbitraryPosition]\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\n       * Border Opacity\n       * @see https://tailwindcss.com/docs/border-opacity\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...getLineStyles(), 'hidden']\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Divide Opacity\n       * @see https://tailwindcss.com/docs/divide-opacity\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/divide-style\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-s': [{\n        'border-s': [borderColor]\n      }],\n      /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-e': [{\n        'border-e': [borderColor]\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: ['', ...getLineStyles()]\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: [isLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w': [{\n        ring: getLengthWithEmptyAndArbitrary()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/ring-color\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\n       * Ring Opacity\n       * @see https://tailwindcss.com/docs/ring-opacity\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://tailwindcss.com/docs/ring-offset-width\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://tailwindcss.com/docs/ring-offset-color\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow-color\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...getBlendModes(), 'plus-lighter', 'plus-darker']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\n       * Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\n       * Backdrop Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n      /**\n       * Tranisition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\n       * Screen Readers\n       * @see https://tailwindcss.com/docs/screen-readers\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n};\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  separator,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'separator', separator);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  for (const configKey in override) {\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\n  }\n  for (const key in extend) {\n    mergeConfigProperties(baseConfig[key], extend[key]);\n  }\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      const mergeValue = mergeObject[key];\n      if (mergeValue !== undefined) {\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\n      }\n    }\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };\n//# sourceMappingURL=bundle-mjs.mjs.map\n"],"names":["setRef","ref","value","current","composeRefs","_len","arguments","length","refs","_key","hasCleanup","cleanups","map","cleanup","node","i","useComposedRefs","React","createSlot","ownerName","SlotClone","createSlotClone","props","forwardedRef","children","slotProps","Object","getter","mayWarn","childrenRef","getOwnPropertyDescriptor","element","get","isReactWarning","props2","mergeProps","childProps","overrideProps","propName","slotPropValue","childPropValue","test","args","filter","Boolean","join","type","count","only","displayName","concat","Slot2","childrenArray","toArray","slottable","find","isSlottable","newElement","newChildren","child","jsx","Slot","SLOTTABLE_IDENTIFIER","Symbol","__radixId","falsyToString","cx","clsx","cva","base","config","_config_compoundVariants","variants","class","className","defaultVariants","getVariantClassNames","keys","variantProp","variant","defaultVariantProp","variantKey","propsWithoutUndefined","entries","reduce","acc","param","key","undefined","compoundVariants","cvClass","cvClassName","compoundVariantOptions","every","Array","isArray","includes","e","t","f","n","o","r","createClassGroupUtils","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","getClassGroupId","classParts","split","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","classGroupFromNextClassPart","slice","validators","classRest","validator","arbitraryPropertyRegex","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","prefix","Map","prefixedClassGroupEntries","classGroups","forEach","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","path","currentClassPartObject","pathPart","has","set","func","getPrefixedClassGroupEntries","classGroupEntries","fromEntries","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","createParseClassName","separator","experimentalParseClassName","isSeparatorSingleCharacter","firstSeparatorCharacter","separatorLength","parseClassName","postfixModifierPosition","modifiers","bracketDepth","modifierStart","index","currentCharacter","baseClassNameWithImportantModifier","hasImportantModifier","startsWith","baseClassName","maybePostfixModifierPosition","sortModifiers","sortedModifiers","unsortedModifiers","modifier","sort","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","classGroupsInConflict","classNames","trim","result","originalClassName","variantModifier","modifierId","classId","conflictGroups","group","twJoin","argument","resolvedValue","string","toValue","mix","k","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","Set","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","Number","isNaN","isArbitraryNumber","isInteger","isPercent","endsWith","isArbitraryValue","isTshirtSize","sizeLabels","isArbitrarySize","isNever","isArbitraryPosition","imageLabels","isArbitraryImage","isImage","isArbitraryShadow","isShadow","isAny","label","testValue","twMerge","createTailwindMerge","createConfigFirst","cacheGet","cacheSet","createConfigRest","functionToCall","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","apply","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","gradientColorStopPositions","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAutoAndArbitrary","getSpacingWithArbitrary","getLengthWithEmptyAndArbitrary","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumberAndArbitrary","aspect","container","columns","box","display","float","clear","isolation","object","overflow","overscroll","position","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","span","row","justify","content","items","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","w","screen","h","size","text","font","tracking","leading","list","placeholder","decoration","indent","align","whitespace","break","hyphens","bg","repeat","from","via","to","rounded","border","divide","outline","ring","shadow","table","caption","transition","duration","ease","delay","animate","transform","rotate","origin","accent","appearance","cursor","caret","resize","scroll","snap","touch","select","fill","stroke","sr"],"sourceRoot":""}